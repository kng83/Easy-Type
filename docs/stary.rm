import uuidv4 from 'uuid/v4';

export default {
    Query: {
      me: (parent, args, { me }) => {
        console.log(me)
        return me;
      },
      users:() => {
        console.log('userQuery', Object.values(models))
        return Object.values(users)
      },
      //tu jest wazne bo bierzemy id
      user: (parent ,{id},context) => {
        console.log('main',id,context)
        return users[id]
      },
      messages: () => {
        return Object.values(messages);
      },
      message: (parent, { id }) => {
        console.log('MAIN',id)
        return messages[id];
      },
    },
    Message: {
        user: message => {
        return users[message.userId];
      },
    },
    User: {
      messages: user => {
        return Object.values(messages).filter(
          message => message.userId === user.id,
        );
      },
      //to robi balagan i wszystko nadpisuje ///
      //username: () => 'Hans',
      username: parent => {
        console.log('USERNAME',parent.username)
        return parent.username
      },
      fullName: user => {
        console.log('FULLNAME',user)
        return `${user.firstName} ${user.lastName}`
      }
    },
    Mutation: {
      createMessage: (parent, { text }, { me }) => {
        const id = uuidv4();
        const message = { 
          id,
          text,
          userId: me.id,
        };
        //dla efektu
        messages[id] = message;
        users[me.id].messageIds.push(id);
        return message;
      },
      deleteMessage: (parent, { id }) => {
        console.log(id)
        if (!messages[id]) {
          return false;
        }
  
        delete messages[id]
    
        return true;
      }
    }
  };